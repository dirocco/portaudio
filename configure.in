dnl
dnl PortAudio configure.in script
dnl
dnl Dominic Mazzoni
dnl
dnl Updated by: H. Gregory Silber on 1/14/03
dnl

dnl Require autoconf >= 2.13
AC_PREREQ(2.13)

dnl Init autoconf and make sure configure is being called
dnl from the right directory (for autoconf executed by configure)
AC_INIT([pa_common/portaudio.h])

dnl Checks for programs
AC_PROG_CC
AC_PROG_LIBTOOL
AC_PATH_PROG(AR, ar, no)
if [[ $AR = "no" ]] ; then
	AC_MSG_ERROR("Could not find ar - needed to create a library");
fi
dnl Add additional help strings
AC_ARG_ENABLE([use-static],[  --enable-use-static     Use static libraries to build executables (Default=NO)],
	buildwithstatic=$enableval,buildwithstatic=no)
if [[ "$buildwithstatic" = "yes" ]] ; then
	AC_MSG_RESULT([Setting builds to use static libraries]);
	LDFLAGS="$LDFLAGS --static";
else
	AC_MSG_RESULT([Setting builds to use shared libraries]);
fi

AC_ARG_ENABLE([vstudio],[  --enable-vstudio        Complile using MS Visual Studio for debugging (Default=NO)],
	buildwithvstudio=$enableval,buildwithvstudio=no)
if [[ "$buildwithvstudio" = "yes" ]] ; then
	AC_MSG_RESULT([Setting builds with Visual Studio]);
else
	AC_MSG_RESULT([Setting builds with default compiler]);
fi
	
AC_ARG_WITH([toolroot],[  --with-toolroot[=DIR]   Use DIR as the root for all tools],ac_toolroot=$withval,ac_toolroot=[])


dnl Extra variables we want to substitue
AC_SUBST(CORE_SRC)
AC_SUBST(PLAT_DIR)
AC_SUBST(PADLL)
AC_SUBST(SHARED_FLAGS)
AC_SUBST(DLL_LIBS)
AC_SUBST(TOOLROOT)
AC_SUBST(LOCALOPT)
AC_SUBST(LOCALLINK)
AC_SUBST(LOCALDLINK)
AC_SUBST(SHARED_LIB_CONDITIONAL)
AC_SUBST(STATIC_LIB_CONDITIONAL)
AC_SUBST(DLLTOOL)
dnl Determine the host operating system / platform

dnl By default, we build a shared library with no post processing
SHARED_LIB_CONDITIONAL=buildsharedlib
STATIC_LIB_CONDITIONAL=buildstaticlib
DLLTOOL=dlltool

case "${host_os}" in
  darwin* )
        dnl Mac OS X configuration
	PLAT_DIR="pa_mac_core/"
        CORE_SRC="pa_mac_core.c";
        LIBS="-framework CoreAudio -lm";
        PADLL="libportaudio.dylib.0.0.18";
        SHARED_FLAGS="-framework CoreAudio -dynamiclib";
        ;;

  mingw* )
	dnl ON mingw, we must build a dll, which requires additional work
	SHARED_LIB_CONDITIONAL=builddll
        dnl MingW configuration
	PLAT_DIR="pa_win_wmme/"
        CORE_SRC="pa_win_wmme.c";
        LIBS="-lwinmm -lm";
        PADLL="portaudio.dll";
        SHARED_FLAGS="-shared -mthreads";
        DLL_LIBS="-lwinmm";
        ;;

  cygwin* )
        dnl Cygwin configuration
	dnl ON cygwin, we must build a dll, which requires additional work
	SHARED_LIB_CONDITIONAL=builddll
	PLAT_DIR="pa_win_wmme/"
        CORE_SRC="pa_win_wmme.c";
        LIBS="-lwinmm -lm";
        PADLL="portaudio.dll";
        SHARED_FLAGS="-shared -mthreads";
        DLL_LIBS="-lwinmm";
        if [[ "$ac_toolroot" != "" ]] ; then
                AC_MSG_RESULT([Setting toolroot to $ac_toolroot]);
                TOOLROOT="$ac_toolroot";
                LOCALOPT="-nostdinc -nostdlib -I$TOOLROOT/usr/include -I$TOOLROOT/usr/lib/gcc-lib/i686-pc-cygwin/3.2/include -I$TOOLROOT/usr/include/w32api -L$TOOLROOT/usr/lib -B$TOOLROOT/lib/"
                LOCALLINK="$TOOLROOT/usr/lib/crt0.o -lg -lcygwin -lkernel32";
                LOCALDLINK="-lcygwin -lkernel32";
                CC="$TOOLROOT/usr/bin/$CC";
                AR="$TOOLROOT/$AR";
		RANLIB="$TOOLROOT/usr/bin/$RANLIB";
		DLLTOOL="$TOOLROOT/usr/bin/dlltool";
        fi

        ;;

  *)
        dnl Unix OSS configuration

   	AC_CHECK_LIB(pthread, pthread_create,
                ,
        AC_MSG_ERROR([libpthread not found!]))

        PLAT_DIR="pa_unix_oss/"
	CORE_SRC="pa_unix_oss.c";
        LIBS="-lm -lpthread";
        PADLL="libportaudio.so.0.0.18";
        SHARED_FLAGS="-shared";
esac

if [[ $enable_static = "no" ]] ; then
	STATIC_LIB_CONDITIONAL=""
fi

if [[ $enable_shared = "no" ]] ; then
	SHARED_LIB_CONDITIONAL=""
fi
AC_OUTPUT([Makefile])

echo ""
echo "Finished configure for module PortAudio."

echo ""
